{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/Evergreen notes devem seguir princípios","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"evergreen-notes-devem-seguir-princípios\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Evergreen notes devem seguir princ\\xEDpios\"), mdx(\"p\", null, \"Segundo Andy Matuschak para criar \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/Evergreen-notes\",\n    \"title\": \"Evergreen notes\"\n  }), \"[[Evergreen notes]]\"), \" que valham a pena investir tempo elas devem seguir alguns princ\\xEDpios:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/Evergreen-notes-devem-ser-atomicas\",\n    \"title\": \"Evergreen notes devem ser atômicas\"\n  }), \"[[Evergreen notes devem ser at\\xF4micas]]\"), \";\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/Evergreen-notes-devem-ser-orientadas-por-conceitos\",\n    \"title\": \"Evergreen notes devem ser orientadas por conceitos\"\n  }), \"[[Evergreen notes devem ser orientadas por conceitos]]\"), \";\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/Evergreen-notes-devem-ser-densamente-linkadas\",\n    \"title\": \"Evergreen notes devem ser densamente linkadas\"\n  }), \"[[Evergreen notes devem ser densamente linkadas]]\"), \";\")));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"evergreen-notes\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Evergreen notes\"), mdx(\"p\", null, \"Termo criado pelo Engenheiro de Software e Pesquisador \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://notes.andymatuschak.org/z4SDCZQeRo4xFEQ8H4qrSqd68ucpgE6LU155C\"\n  }), \"Andy Matuschak\"), \".\"), mdx(\"p\", null, \"[Evergreen Notes s\\xE3o anota\\xE7\\xF5es que evoluem com o tempo]\", \", pois sempre s\\xE3o revisitadas, organizadas e atualizadas.  Sendo diferente de anota\\xE7\\xF5es padr\\xF5es em que \", \"[Fazemos uma anota\\xE7\\xE3o e nunca mais relemos]\", \".\"), mdx(\"p\", null, \"Assim como \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/Os-cartoes-do-Anki-devem-ser-bem-feitos-para-serem-eficientes\",\n    \"title\": \"Os cartões do Anki devem ser bem feitos para serem eficientes\"\n  }), \"[[Os cart\\xF5es do Anki devem ser bem feitos para serem eficientes]]\"), \", \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/Evergreen-notes-devem-seguir-principios\",\n    \"title\": \"Evergreen notes devem seguir princípios\"\n  }), \"[[Evergreen notes devem seguir princ\\xEDpios]]\"), \" para que sejam eficientes. Como serem densamente linkadas, at\\xF4micas e orientadas por conceitos.\"), mdx(\"p\", null, \"Andy Matuschak atribui parte deste conceito \\xE0 ideia do sistema de escrita \", \"[Zettlekasten]\", \" do soci\\xF3logo alem\\xE3o Niklas Luhmann.\"), mdx(\"p\", null, \"Ultimamente est\\xE1 ocorrendo uma esp\\xE9cie de \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.notion.so/db13644f08144495ad9877f217a161a1?v=ff6777802811416ba08dc114e0b11837\"\n  }), \"explos\\xE3o Cambriana de sistemas de anota\\xE7\\xF5es\"), \", \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/Evergreen-notes\",\n    \"title\": \"Evergreen notes\"\n  }), \"[[Evergreen notes]]\"), \" fazem parte dessa explos\\xE3o, assim como \", \"[Roam research]\", \" e outros.\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"38a20328-322b-5fc9-9bc8-5741e2eaf2ad","fields":{"slug":"/Evergreen notes","title":"Evergreen notes"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"evergreen-notes-devem-ser-atômicas\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Evergreen notes devem ser at\\xF4micas\"), mdx(\"p\", null, \"Assim como os \", \"[cart\\xF5es do Anki devem ser at\\xF4micos]\", \", \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/Evergreen-notes\",\n    \"title\": \"Evergreen notes\"\n  }), \"[[Evergreen notes]]\"), \" tamb\\xE9m, isso significa que \\xE9 melhor criar notas sobre apenas uma coisa e sempre que poss\\xEDvel capturar toda a ess\\xEAncia do assunto na nota.\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"82b50c37-b895-5f89-a701-30a44bd1d5ec","fields":{"slug":"/Evergreen notes devem ser atômicas","title":"Evergreen notes devem ser atômicas"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"evergreen-notes-devem-ser-orientadas-por-conceitos\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Evergreen notes devem ser orientadas por conceitos\"), mdx(\"p\", null, \"\\xC9 melhor criar \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/Evergreen-notes\",\n    \"title\": \"Evergreen notes\"\n  }), \"[[Evergreen notes]]\"), \" por conceitos em vez de por autor, livros, evento, projeto, t\\xF3pico ... etc. Dessa forma \\xE9 poss\\xEDvel descobrir conex\\xF5es entre livros e dom\\xEDnios  confrome fore atualizando e linkando \\xE0 nota com o passar do tempo \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/Evergreen-notes-devem-ser-densamente-linkadas\",\n    \"title\": \"Evergreen notes devem ser densamente linkadas\"\n  }), \"[[Evergreen notes devem ser densamente linkadas]]\"), \"\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"51fafa79-8f18-53ad-be1a-0c6f04ac2052","fields":{"slug":"/Evergreen notes devem ser orientadas por conceitos","title":"Evergreen notes devem ser orientadas por conceitos"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"evergreen-notes-devem-ser-densamente-linkadas\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Evergreen notes devem ser densamente linkadas\"), mdx(\"p\", null, \"Criar muitos links entre notas faz-no pensar expansivamente sobre outros conceitos que podem estar relacionados ocm oque estamos pensando. Criar uma press\\xE3o para pensar cuidadosamente em como ideias se relacionam uma com as outras (ver \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/Evergreen-notes-devem-ser-orientadas-por-conceitos\",\n    \"title\": \"Evergreen notes devem ser orientadas por conceitos\"\n  }), \"[[Evergreen notes devem ser orientadas por conceitos]]\"), \").\\nE para tanto, devemos revisitar periodicamente nossas anota\\xE7\\xF5es, fazendo uma esp\\xE9cie de \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/Repeticao-Espacada-como-forma-de-aumentar-memoria-de-longo-prazo\",\n    \"title\": \"Repetição Espaçada como forma de aumentar memória de longo prazo\"\n  }), \"[[Repeti\\xE7\\xE3o Espa\\xE7ada como forma de aumentar mem\\xF3ria de longo prazo]]\"), \" das anota\\xE7\\xF5es, diferentemente do que \\xE9 feito com anota\\xE7\\xF5es comuns em que  \", \"[Fazemos uma anota\\xE7\\xE3o e nunca mais relemos]\", \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"181b4cac-5051-532d-b5a7-1d298086cdf9","fields":{"slug":"/Evergreen notes devem ser densamente linkadas","title":"Evergreen notes devem ser densamente linkadas"}}}],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"evergreen-notes\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Evergreen notes\"), mdx(\"p\", null, \"Termo criado pelo Engenheiro de Software e Pesquisador \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://notes.andymatuschak.org/z4SDCZQeRo4xFEQ8H4qrSqd68ucpgE6LU155C\"\n  }), \"Andy Matuschak\"), \".\"), mdx(\"p\", null, \"[Evergreen Notes s\\xE3o anota\\xE7\\xF5es que evoluem com o tempo]\", \", pois sempre s\\xE3o revisitadas, organizadas e atualizadas.  Sendo diferente de anota\\xE7\\xF5es padr\\xF5es em que \", \"[Fazemos uma anota\\xE7\\xE3o e nunca mais relemos]\", \".\"), mdx(\"p\", null, \"Assim como \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/Os-cartoes-do-Anki-devem-ser-bem-feitos-para-serem-eficientes\",\n    \"title\": \"Os cartões do Anki devem ser bem feitos para serem eficientes\"\n  }), \"[[Os cart\\xF5es do Anki devem ser bem feitos para serem eficientes]]\"), \", \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/Evergreen-notes-devem-seguir-principios\",\n    \"title\": \"Evergreen notes devem seguir princípios\"\n  }), \"[[Evergreen notes devem seguir princ\\xEDpios]]\"), \" para que sejam eficientes. Como serem densamente linkadas, at\\xF4micas e orientadas por conceitos.\"), mdx(\"p\", null, \"Andy Matuschak atribui parte deste conceito \\xE0 ideia do sistema de escrita \", \"[Zettlekasten]\", \" do soci\\xF3logo alem\\xE3o Niklas Luhmann.\"), mdx(\"p\", null, \"Ultimamente est\\xE1 ocorrendo uma esp\\xE9cie de \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.notion.so/db13644f08144495ad9877f217a161a1?v=ff6777802811416ba08dc114e0b11837\"\n  }), \"explos\\xE3o Cambriana de sistemas de anota\\xE7\\xF5es\"), \", \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/Evergreen-notes\",\n    \"title\": \"Evergreen notes\"\n  }), \"[[Evergreen notes]]\"), \" fazem parte dessa explos\\xE3o, assim como \", \"[Roam research]\", \" e outros.\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"38a20328-322b-5fc9-9bc8-5741e2eaf2ad","fields":{"slug":"/Evergreen notes","title":"Evergreen notes"}}}]},"fields":{"slug":"/Evergreen notes devem seguir princípios","title":"Evergreen notes devem seguir princípios"}}},"pageContext":{"id":"a7461f65-5374-5279-98ba-5c671aae5c19"}},"staticQueryHashes":["2098632890","426988268"]}